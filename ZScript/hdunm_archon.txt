class ArmaggedonBallTail:IdleDummy{
	default{
		+forcexybillboard
		scale 1.8;renderstyle "add";
		Translation "112:127=176:191", "224:231=170:175", "168:168=170:170";
	}
	states{
	spawn:
		BFS1 AB 2 bright A_FadeOut(0.2);
		loop;
	}
}

class ArchonSpark:HDActor{
	default{
		+nointeraction +forcexybillboard +bright
		radius 0;height 0;
		renderstyle "add";alpha 0.1; scale 0.16;
		Translation "112:127=176:191", "224:231=170:175", "168:168=170:170";
	}
	states{
	spawn:
		BFE2 DDDDDDDDDD 1 bright nodelay A_FadeIn(0.1);
		BFE2 D 1 A_FadeOut(0.3);
		wait;
	}
}

class Archonsploder:HDActor{
	int ud;
	default{
		+noblockmap +missile +nodamagethrust
		gravity 0;height 6;radius 6;
		damagefactor(0);
	}
	override void postbeginplay(){
		super.postbeginplay();
		A_ChangeVelocity(1,0,0,CVF_RELATIVE);
		distantnoise.make(self,"world/rocketfar");
	}
	states{
	death:
		TNT1 A 0{
			if(ceilingz-pos.z<(pos.z-floorz)*3) ud=-5;
			else ud=5;
		}
		TNT1 AA 0 A_SpawnItemEx("HDSmoke", -1,0,ud,
			frandom(-2,2),frandom(-2,2),0,
			frandom(-15,15),SXF_NOCHECKPOSITION
		);
	xdeath:
	spawn:
		TNT1 A 0 nodelay;
		TNT1 AA 0 A_SpawnItemEx("HDArchonExplosion",
			random(-1,1),random(-1,1),2, 0,0,0,
			0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION
		);
		TNT1 A 2 A_SpawnItemEx("HDArchonExplosion",0,0,0,
			0,0,2,
			0,SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION
		);
	death2:
		TNT1 AA 0 A_SpawnItemEx("HDSmoke",-1,0,1,
			random(-2,3),random(-2,2),0,
			random(-15,15),SXF_NOCHECKPOSITION
		);
		TNT1 A 21{
			A_AlertMonsters();
			DistantQuaker.Quake(self,4,35,512,10);
		}stop;
	}
}

class HDArchonExplosion:IdleDummy{
	default{
		+forcexybillboard +bright
		alpha 0.9;renderstyle "add";
		deathsound "world/explode";
	}
	states{
	spawn:
	death:
		ARCB D 0 nodelay{
			if(max(abs(pos.x),abs(pos.y),abs(pos.z))>=32768){destroy();return;}
			vel.z+=2;
			A_StartSound(deathsound,CHAN_BODY);
			let xxx=spawn("HDExplosionLight",pos);
			xxx.target=self;
		}
		ARCB BB 0 A_SpawnItemEx("ParticleWhiteSmall", 0,0,0, vel.x+random(-2,2),vel.y+random(-2,2),vel.z,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS);
		ARCB BBBB 0 A_SpawnItemEx("HDSmoke", 0,0,0, vel.x+frandom(-2,2),vel.y+frandom(-2,2),vel.z,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS);
		ARCB D 0 A_Jump(256,"fade");
	fade:
		ARCB D 0 A_Jump(128,"fade2");
		ARCB DEF 1 A_FadeOut(0.1);
		ARCB G 1 A_FadeOut(0.2);
		ARCB HI 1 A_FadeOut(0.2);
		ARCB D 0 A_Jump(256,"fadecommon");
	fade2:
		ARCB JK 1 A_FadeOut(0.1);
		ARCB L 1 A_FadeOut(0.2);
		ARCB MN 1 A_FadeOut(0.2);
	fadecommon:
		TNT1 A 20;
		stop;
	}
}

class ArchonBallTail:HDActor{
	default{
		+nointeraction
		+forcexybillboard
		renderstyle "add";
		alpha 0.6;
		scale 0.7;
	}
	states{
	spawn:
		ARCB D 0 A_Jump(128,"spawn2");
		ARCB DEFGHI 2 bright{ A_FadeOut(0.2); A_StartSound("baron/ballhum",volume:0.4,attenuation:6.);}
		stop;
	death2:
		ARCB JKLMN 2 bright{ A_FadeOut(0.2); A_StartSound("baron/ballhum",volume:0.4,attenuation:6.);}
		stop;
	}
}

class ArchonBall:hdfireball{
	default{
		missiletype "HDSmoke";
		damagetype "unmaker";
		activesound "baron/ballhum";
		//decal "gooscorch";
		renderstyle "normal";
		gravity 0; +hittracer
		speed 25;
		hdfireball.firefatigue int(HDCONST_MAXFIREFATIGUE*0.2);
	}
	actor lingerburner;
	override void ondestroy(){
		if(lingerburner)lingerburner.destroy();
		super.ondestroy();
	}
	states{
	spawn:
		ARCB ABCABC 2 A_FBTail();
	spawn2:
		ARCB ABC 2 A_FBFloat();
		loop;
	death:
		ARCB A 0{
		//damage
		//NOTE: basic impact damage calculation is ALREADY in base SlowProjectile!
		if(tracer){
			int dmgg=random(32,128);
			tracer.damagemobj(self,target,dmgg,"Piercing");
		}else doordestroyer.destroydoor(self,42,frandom(3,16));

		//explosion
			A_SprayDecal("Scorch",16);
			A_HDBlast(
				pushradius:256,pushamount:128,fullpushradius:96,
				fragradius:HDCONST_ONEMETRE*(10+0.2*stamina),fragtype:"HDB_frag",
				immolateradius:128,immolateamount:random(3,60),
				immolatechance:25
			);
			actor xpl=spawn("Archonsploder",pos-(0,0,1),ALLOW_REPLACE);
			xpl.target=target;xpl.master=master;xpl.stamina=stamina;xpl.translation=translation;
			distantnoise.make(self,"world/rocketfar");
		A_SpawnChunksFrags("HDB_frag",180,0.8+0.05*stamina);
	}
		ARCB A 0 A_Jump(128,"death2");
		ARCB DEFGHI 4 bright A_FadeOut(0.2);
		stop;
	death2:

		ARCB JKLMN 4 bright A_FadeOut(0.2);
		stop;
	}
}

class BaronUnmaker:PainMonster{
	default{
		height 64;
		radius 17;
		mass 1000;
		+boss
		seesound "ubaron/sight";
		painsound "ubaron/pain";
		deathsound "ubaron/death";
		activesound "ubaron/active";
		obituary "$OB_ARCHON";
		tag "$TAG_ARCHON";

		+nofear +frightening +doharmspecies +quicktoretaliate +neverrespawn +noblooddecals
		maxtargetrange 65536;
		damagefactor "hot",0.8;
		damagefactor "cold",0.7;
		damagefactor "slashing",0.86;
		damagefactor "piercing",0.95;
		damagefactor "balefire",0.3;
		damagefactor "unmaker",0.25; //ironic
		meleedamage 24;
		meleerange 58;
		health 5000;
		speed 12;
		painchance 4;
		hdmobbase.shields 2500;
	}

	actor ShootBall(actor inflictor,actor source){
		inflictor.A_StartSound("weapons/bfgfwoosh",CHAN_WEAPON,CHANF_OVERLAP);
		armaggedoncrittime=0;

		vector3 ballvel=(cos(inflictor.pitch)*(cos(inflictor.angle),sin(inflictor.angle)),-sin(inflictor.pitch));

		vector3 spawnpos=(inflictor.pos.xy,inflictor.pos.z+inflictor.height*0.8)+ballvel*6;
		if(inflictor.viewpos)spawnpos+=inflictor.viewpos.offset;

		let bbb=spawn("ArmageddonBall",spawnpos);
		if(bbb){
			bbb.target=source;
			bbb.master=source;
			bbb.pitch=inflictor.pitch+45;
			bbb.angle=inflictor.angle;
			bbb.vel=inflictor.vel+ballvel*bbb.speed;
		}
		return bbb;
	}

	bool gluttony;
	bool pride;
	bool lust;
	int pissleft;
	bool pissing;
	int ticsforloop3;
	int armaggedontime;
	int armaggedoncrittime;

	static void Spark(actor caller,int sparks=1,double sparkheight=10){
		actor a;vector3 spot;
		vector3 origin=caller.pos+(0,0,sparkheight);
		double spp;double spa;
		for(int i=0;i<sparks;i++){
			spp=caller.pitch+frandom(-20,20);
			spa=caller.angle+frandom(-20,20);
			spot=random(32,57)*(cos(spp)*cos(spa),cos(spp)*sin(spa),-sin(spp));
			a=caller.spawn("ArchonSpark",origin+spot,ALLOW_REPLACE);
			a.vel+=caller.vel*0.9-spot*0.03;
		}
	}

	override double bulletshell(vector3 hitpos,double hitangle){
		return frandom(3,12);
	}
	override double bulletresistance(double hitangle){
		return max(0,frandom(0.8,1.)-hitangle*0.008);
	}
	override void postbeginplay(){
		super.postbeginplay();
		A_GiveInventory("ImmunityToFire");
		resize(0.95,1.3);
		pissleft=2000; //piss tank.
		if(countinv("UnmakerUpgrade1Icon")){
		gluttony=true;
		A_TakeInventory("UnmakerUpgrade1Icon");
		}
		if(countinv("UnmakerUpgrade2Icon")){
		pride=true;
		A_TakeInventory("UnmakerUpgrade2Icon");
		}
		if(countinv("UnmakerUpgrade3Icon")){
		lust=true;
		A_TakeInventory("UnmakerUpgrade3Icon");
		}
	}
	override void tick(){
		super.tick();
		if(health>0){stunned=0;bodydamage=0;}
		if(!isfrozen()&&firefatigue>0)firefatigue-=12;
		if(!isfrozen()&&pissleft<1999&&
		!pissing)pissleft+=2; //refueling.
	}
	enum BaronUnmakerStats{
		BU_HPMAX=10000,
		BU_OKAY=BU_HPMAX*7/10,
		BU_BAD=BU_HPMAX*3/10,
	}

	void A_BlurWander(bool dontlook=false){
		A_HDWander(dontlook?0:CHF_LOOK);
		A_SpawnItemEx("ArchonBlur",frandom(-2,2),frandom(-2,2),frandom(-2,2),flags:SXF_TRANSFERTRANSLATION|SXF_TRANSFERSPRITEFRAME);
	}
	void A_BlurChase(){
		speed=getdefaultbytype(getclass()).speed;

		A_HDChase();
		A_SpawnItemEx("ArchonBlur",frandom(-2,2),frandom(-2,2),frandom(-2,2),flags:SXF_TRANSFERTRANSLATION|SXF_TRANSFERSPRITEFRAME);
	}

	states{
	spwander:
		BRUN ABCDABCD 7 A_BlurWander();
		BRUN A 0{
			if(!random(0,1))setstatelabel("spwander");
			else A_Recoil(-0.4);
		}//fallthrough to spawn

	spawn:
		BRUN AA 8 A_HDLook();
		BRUN A 1 A_SetTics(random(1,16));
		BRUN BB 8 A_HDLook();
		BRUN B 1 A_SetTics(random(1,16));
		BRUN CC 8 A_HDLook();
		BRUN C 1 A_SetTics(random(1,16));
		BRUN DD 8 A_HDLook();
		BRUN D 1 A_SetTics(random(1,16));
		BRUN A 0{
			if(bambush)setstatelabel("spawn");
			else{
				if(!random(0,5))A_StartSound("ubaron/active",CHAN_VOICE);
				if(!random(0,5))setstatelabel("spwander");
			}
		}loop;

	see:
		BRUN ABCD 4 A_BlurChase();
		TNT1 A 0 A_JumpIfTargetInLOS("see");
		goto roam;
	roam:
		BRUN A 0 A_JumpIfTargetInLOS("missile");
		BRUN A 0 A_ShoutAlert(0.3,SAF_SILENT);
		BRUN ABCD 4 A_BlurWander(CHF_LOOK);
		loop;
	missile:
		BRUN ABCD 3 A_TurnToAim(30,32);
		loop;
	shoot:
		BRUN E 0 A_AlertMonsters(0,AMF_TARGETEMITTER);
		BRUN E 0 A_Jump(2,"ArmageddonConfirmation");
		BRUN E 0 A_Jump(80,"FireballBegin","MissilePissConfirmation","Fireball2Begin");
		BRUN E 0 A_Jump(128,"MissileMissile");
		goto see; //if the player's too close

	melee:
		BRUN E 0 A_Jump(128,"melee2");
	melee1:
		BRUN E 3 A_FaceTarget();
		BRUN F 1;
		BRUN G 3{
			A_CustomMeleeAttack(random(20,100),"baron/melee","","claws",true);
		}
		BRUN H 3;
		---- A 0 A_JumpIfTargetInsideMeleeRange("melee2");
		goto see;
	melee2:
		BRUN J 3 A_FaceTarget();
		BRUN I 1;
		BRUN J 3{
			A_CustomMeleeAttack(random(20,100),"baron/melee","","claws",true);
		}
		BRUN K 3;
		---- A 0 A_JumpIfTargetInsideMeleeRange("melee1");
		goto see;

	MissileMissile:
		BRUN # 0 A_JumpIfCloser(192,"shoot");
		BRUN Q 16 A_LeadTarget(lasttargetdist*0.12);
		BRUN Q 6 bright A_SpawnProjectile("UnmakerBeam",height-12,0,-2,CMF_AIMDIRECTION,pitch);
		BRUN Q 6 bright A_SpawnProjectile("UnmakerBeam",height-12,0,-2,CMF_AIMDIRECTION,pitch);
		BRUN Q 6 bright A_SpawnProjectile("UnmakerBeam",height-12,0,-2,CMF_AIMDIRECTION,pitch);
		BRUN Q 6 bright A_SpawnProjectile("UnmakerBeam",height-12,0,-2,CMF_AIMDIRECTION,pitch);
		BRUN Q 12;
		---- A 0 setstatelabel("see");



	ArmageddonConfirmation:
		UMKR A 0{if(lust&&gluttony&&pride){armaggedontime=0;setstatelabel("ArmageddonCharge");}}
		goto shoot;
		
	ArmageddonCharge:
		BRUN D 1;
		BRUN N 4 A_FaceLastTargetPos(20,20);
		BRUN M 2 A_FaceLastTargetPos(30,32);
	ArmageddonChargeLoop:
		#### # 1{
			HDUnmaker.Spark(self,1,height-2);
			A_StartSound("weapons/bfgcharge",(armaggedontime>6)?CHAN_AUTO:CHAN_WEAPON);
			A_SetTics(max(1,6-int(armaggedontime*0.3)));
			armaggedontime++;
			hdmobai.frighten(self,512);
		}
		#### # 0{
			if(armaggedontime>14)setstatelabel("armageddonshoot");
		}loop;
	armageddonshoot:
		#### M 0{
			armaggedontime=0;
			armaggedoncrittime=16;
			bnopain=true;
			A_StartSound("unmaker/blackholeshoot",CHAN_WEAPON);
			hdmobai.frighten(self,512);
		}
		#### M 3{
			armaggedoncrittime--;
			A_StartSound("weapons/bfgcharge",random(9005,9007));
			HDUnmaker.Spark(self,1,height-2);
			hdmobai.frighten(self,512);
			if(armaggedoncrittime<=1){
				armaggedoncrittime=0;
				setstatelabel("reallyshoot");
			}else if(armaggedoncrittime<10)A_SetTics(2);
			else if(armaggedoncrittime<5)A_SetTics(1);
		}wait;
	reallyshoot:
		#### M 4{
			A_AlertMonsters();
			hdmobai.frighten(self,1024);
		}
		#### N 4;
		#### O 2{
			ShootBall(self,self);
		}
		#### OODD 1 A_ChangeVelocity(-0.3,0,0.06,CVF_RELATIVE);
		#### BBAA 1{bnopain=false;}
		goto see;

	MissilePissConfirmation:
		UMKR A 0{if(pissleft<1)setstatelabel("shoot");}
		UMKR A 0{if(lust||gluttony||pride)setstatelabel("MissilePiss");}
		goto shoot;

	MissilePiss:
		BRUN QQQQQQQQQQQQQQ 1 A_FaceLastTargetPos(0.4,0.4);
		UMKR A 0{
			ticsforloop3=0;
			pissing=true;
			A_StartSound("weapons/unmakerbeamstart",CHAN_WEAPON);
		}
	MissilePissLoop:
		BRUN Q 1{
			if(pissleft>0){
			pissleft--;
			A_Recoil(0.01);
			A_FaceLastTargetPos(0.25,0.25);
			A_CustomRailgun ((10),0,"","ff 55 88",
					RGF_CENTERZ|RGF_SILENT|RGF_NOPIERCING|RGF_FULLBRIGHT,0,10,"EgonUnmaker",0,0,0,1,0.2,1,"None",28);
			ticsforloop3++;
			}else setstatelabel("MissilePissEnd");
			}

		UMKR A 0{
if(ticsforloop3>105)setstatelabel("MissilePiss2");
		}
		UMKR A 0 A_JumpIfTargetInLOS ("MissilePissLoop", 90);
		goto MissilePissLoopNT;

	MissilePissLoopNT:
		BRUN Q 1{
			if(pissleft>0){
			pissleft--;
			A_Recoil(0.01);
			A_CustomRailgun ((10),0,"","ff 55 88",
					RGF_CENTERZ|RGF_SILENT|RGF_NOPIERCING|RGF_FULLBRIGHT,0,10,"EgonUnmaker",0,0,0,1,0.2,1,"None",28);
			ticsforloop3++;
			}else setstatelabel("MissilePissEnd");
			}

		UMKR A 0{
if(ticsforloop3>105)setstatelabel("MissilePiss2");
		}
		UMKR A 0{if(!random(0,60))setstatelabel("MissilePissEnd");}
		UMKR A 0 A_JumpIfTargetInLOS ("MissilePissLoop", 90);
		loop;

	MissilePiss2:
		UMKR A 0{
			ticsforloop3=0;
			A_StartSound("weapons/unmakerbeamloop",CHAN_WEAPON,CHANF_LOOPING);
		}
	MissilePissLoop2:
		BRUN Q 1{
			if(pissleft>0){
			pissleft--;
			A_Recoil(0.01);
			A_FaceLastTargetPos(0.5,0.5);
			A_CustomRailgun ((10),0,"","ff 55 88",
					RGF_CENTERZ|RGF_SILENT|RGF_NOPIERCING|RGF_FULLBRIGHT,0,10,"EgonUnmaker",0,0,0,1,0.2,1,"None",28);
			ticsforloop3++;
			}else setstatelabel("MissilePissEnd");
			}
		BRUN A 0{
			if(frandom(0,0.1)){
				pissleft--;
			}
		}
		UMKR A 0 A_JumpIfTargetInLOS ("MissilePissLoop2", 40);
		goto MissilePissEnd;

	MissilePissEnd:
		BRUN Q 1{
			pissing=false;
			A_FaceLastTargetPos(0.1,0.1);
			A_StartSound("weapons/unmakerbeamend",CHAN_WEAPON);
				A_CustomRailgun((5),0,"","ff 55 88",
					RGF_CENTERZ|RGF_SILENT|RGF_NOPIERCING|RGF_FULLBRIGHT,
					0,10,"EgonUnmaker",0,0,2048,18,0.2,1.0,"None",28);
			}
		BRUN Q 1;
		UMKR A 0{
			if(pissleft>0){
				pissleft--;
			}
		}
		BRUN Q 1;
		goto see;


	pain:
		BRUN H 0{
			bnopain=false;
			if(pissing){
			pissing=false;
			A_FaceLastTargetPos(0.5,0.5);
			A_StartSound("weapons/unmakerbeamend",CHAN_WEAPON);
				A_CustomRailgun((5),0,"","ff 55 88",
					RGF_CENTERZ|RGF_SILENT|RGF_NOPIERCING|RGF_FULLBRIGHT,
					0,50.0,"EgonUnmaker",0,0,2048,18,0.2,1.0,"None",28);
				}
			if(pissleft>0){
				pissleft--;
			}
		}
		BRUN Q 6 A_Pain();
		BRUN Q 3 A_Jump(116,"see","MissilePain");
	FireballBegin:
		BRUN D 1 A_JumpIfCloser(192,"shoot");
		BRUN F 4 A_FaceLastTargetPos(20,20);
	Fireball:
		BRUN EE 2 A_FaceLastTargetPos(30,32);
		BRUN F 3 A_FaceLastTargetPos(6,32);
		BRUN F 1 A_LeadTarget(lasttargetdist*0.06,false,45);
		BRUN G 4{
			actor aaa;int bbb;
			[bbb,aaa]=A_SpawnItemEx("ArchonBall",
				0,0,32,
				cos(pitch)*25,0,-sin(pitch)*25
			);
			aaa.vel+=vel;
			aaa.translation=translation;
		}
		BRUN HF 3;
		BRUN A 0 A_JumpIf(
			!random(0,7)
			||(
				!random(0,4)
				&&!CheckTargetInSight()
			)
		,"see");
		goto Fireball2Begin;
	Fireball2Begin:
		BRUN B 1 A_JumpIfCloser(192,"shoot");
		BRUN J 4 A_FaceLastTargetPos(20,20);
	Fireball2:
		BRUN II 2 A_FaceLastTargetPos(30,32);
		BRUN J 3 A_FaceLastTargetPos(6,32);
		BRUN J 1 A_LeadTarget(lasttargetdist*0.06,false,45);
		BRUN K 4{
			actor aaa;int bbb;
			[bbb,aaa]=A_SpawnItemEx("ArchonBall",
				0,0,32,
				cos(pitch)*25,0,-sin(pitch)*25
			);
			aaa.vel+=vel;
			aaa.translation=translation;
		}
		BRUN KJ 3;
		BRUN A 0 A_JumpIf(
			!random(0,7)
			||(
				!random(0,4)
				&&!CheckTargetInSight()
			)
		,"see");
		---- A 0 setstatelabel("FireballBegin");

	MissilePain:
		BRUN Q 12 A_FaceLastTargetPos(0,0);
		BRUN Q 12 bright A_SpawnProjectile("UnmakerBeam",height-12,0,-2,CMF_AIMDIRECTION,pitch);
		BRUN Q 18;
		goto See;

	death.bleedout:
	death.telefrag:
	death:
		---- A 0{bodydamage+=666*5;}
		---- A 0 A_Quake(2,64,0,600);
		BRUN H 0{
			if(pissing){
			pissing=false;
			A_FaceTarget(0.1,0.1);
			A_StartSound("weapons/unmakerbeamend",CHAN_WEAPON);
				A_CustomRailgun((5),0,"","ff 55 88",
					RGF_CENTERZ|RGF_SILENT|RGF_NOPIERCING|RGF_FULLBRIGHT,
					0,50.0,"EgonUnmaker",0,0,2048,18,0.2,1.0,"None",28);
				}
			if(pissleft>0){
				pissleft--;
			}
		}
		BRUN Q 2 A_SpawnItemEx("BFGShard",0,0,20,10,0,8,45,SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS);
		BRUN Q 2 A_SpawnItemEx("BFGShard",0,0,35,10,0,8,135,SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS);
		BRUN Q 2 A_SpawnItemEx("BFGShard",0,0,50,10,0,8,225,SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS);
		BRUN Q 2 A_SpawnItemEx("BFGShard",0,0,65,10,0,8,315,SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS);
		BRUN Q 30 A_Scream();
		BRUN R 4;
		BRUN S 2 A_NoBlocking();
		BRUN T 2{
			for(int i=45;i<360;i+=90){
				A_SpawnItemEx("HDExplosion",
					4,-4,20,vel.x,vel.y,vel.z+1,i,
					SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS|SXF_ABSOLUTEMOMENTUM
				);
				A_SpawnItemEx("HDSmokeChunk",0,0,0,
					vel.x+frandom(-12,12),
					vel.y+random(-12,12),
					vel.z+frandom(4,16),
					0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM
				);
		}
	if(gluttony){
			A_DropItem("HDOrangeDemonKey");
		}
	if(pride){
			A_DropItem("HDPurpleDemonKey");
		}
	if(lust){
			A_DropItem("HDCyanDemonKey");
		}
			A_DropItem("HDUnmaker"); //ALWAYS drop this
				A_SpawnItemEx("ExplosionEffectUnmakerBaron",0,0,height/2,
					0,
					0,
					0,
					0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM
				);
			A_Quake(3,26,0,220,"none");
		}
		BRUN UV 2;
		BRUN W 2 bright A_SetRenderStyle(1,STYLE_ADD);
		BRUN WXYZ 2 bright;
		BRUN [ 1 bright;
		stop;
	}
}

class ExplosionEffectUnmakerBaron:IdleDummy{
	default{

		+bright
Translation "112:127=176:191", "224:231=170:175", "168:168=170:170";
		renderstyle "add";
		deathsound "weapons/bfgx";
		damagetype "unmaker";
		alpha 0.9;
		height 6;
		radius 6;
		speed 10;
		gravity 0;
	}
	states{
	spawn:
		TNT1 A 0;
	death:
		BFE1 A 2 A_Scream();
		BFE1 B 2 A_Explode(160,512,0);
		BFE1 B 4{
			DistantQuaker.Quake(self,
				6,100,16384,10,256,512,128
			);
			DistantNoise.Make(self,"world/bfgfar");
		}
		TNT1 AAAAA 0 A_SpawnItemEx("HDSmokeChunk",random(-2,0),random(-3,3),random(-2,2),random(-5,0),random(-5,5),random(0,5),random(100,260),SXF_TRANSFERPOINTERS|SXF_NOCHECKPOSITION,16);
		TNT1 AAAAA 0 A_SpawnItemEx("BaronExplosionRemains",-1,0,-12,0,0,0,SXF_TRANSFERPOINTERS|SXF_NOCHECKPOSITION,16);
		BFE1 CCCC 2;
		BFE1 CCC 0 A_SpawnItemEx("HDSmoke",random(-4,0),random(-3,3),random(0,4),random(-1,1),random(-1,1),random(1,3),0,SXF_TRANSFERPOINTERS|SXF_NOCHECKPOSITION,16);
		BFE1 DEF 6;
		BFE1 F 3 bright A_FadeOut(0.1);
		wait;
	}
}

class ExplosionEffectUnmakerBaronHarmless:IdleDummy{
	default{
		+bright
Translation "112:127=176:191", "224:231=170:175", "168:168=170:170";
		renderstyle "add";
		deathsound "weapons/bfgx";
		alpha 0.9;
		height 6;
		radius 6;
		speed 10;
		gravity 0;
	}
	states{
	spawn:
		TNT1 A 0;
	death:
		BFE1 A 2 A_Scream();
		BFE1 B 2;
		BFE1 B 4{
			DistantQuaker.Quake(self,
				6,100,16384,10,256,512,128
			);
			DistantNoise.Make(self,"world/bfgfar");
		}
		TNT1 AAAAA 0 A_SpawnItemEx("HDSmokeChunk",random(-2,0),random(-3,3),random(-2,2),random(-5,0),random(-5,5),random(0,5),random(100,260),SXF_TRANSFERPOINTERS|SXF_NOCHECKPOSITION,16);
		TNT1 AAAAA 0 A_SpawnItemEx("BaronExplosionRemains",-1,0,-12,0,0,0,SXF_TRANSFERPOINTERS|SXF_NOCHECKPOSITION,16);

		BFE1 CCCC 2;
		BFE1 CCC 0 A_SpawnItemEx("HDSmoke",random(-4,0),random(-3,3),random(0,4),random(-1,1),random(-1,1),random(1,3),0,SXF_TRANSFERPOINTERS|SXF_NOCHECKPOSITION,16);
		BFE1 DEF 6;
		BFE1 F 3 bright A_FadeOut(0.1);
		wait;
	}
}

class BaronExplosionRemains:IdleDummy{
	string pcol;
	states{
	spawn:
		TNT1 A 0 nodelay{
			pcol="ff 55 88";
			stamina=0;
		}
	spawn2:
		TNT1 AAAA 1 A_SpawnParticle(
			pcol,SPF_FULLBRIGHT,35,
			size:frandom(1,8),0,
			frandom(-16,16),frandom(-16,16),frandom(0,8),
			frandom(-1,1),frandom(-1,1),frandom(1,2),
			frandom(-0.1,0.1),frandom(-0.1,0.1),-0.05
		);
		TNT1 A 0 A_SpawnItemEx("HDSmoke",random(-3,3),random(-3,3),random(-3,3),random(-1,1),random(-1,1),random(1,3),0,SXF_TRANSFERPOINTERS|SXF_NOCHECKPOSITION);
		TNT1 A 0{stamina++;}
		TNT1 A 0 A_JumpIf(stamina<10,"spawn2");
		TNT1 AAAAAA 2 A_SpawnParticle(
			pcol,SPF_FULLBRIGHT,35,
			size:frandom(1,8),0,
			frandom(-16,16),frandom(-16,16),frandom(0,8),
			frandom(-1,1),frandom(-1,1),frandom(1,2),
			frandom(-0.1,0.1),frandom(-0.1,0.1),-0.05
		);
		stop;
	}
}

class ArchonBlur:HDActor{
	default{
		+nointeraction
		alpha 0.6;
	}
	states{
	spawn:
		BRUN # 0 nodelay A_ChangeVelocity(frandom(-1,3),frandom(-1,1),frandom(-1,1));
		BRUN # 1 A_FadeOut(0.05);
		wait;
	}
}

/*
ARCHON OF HELL

An extremely formidable demon made from various corrupted flesh and bone mangled together
with the Unmaker transposing alongside a user who operated it for too long.
It appeared in the scriptures of the site where the bioweapon is found.
According to the writings, it is one of the most feared demons of all
hellkind can muster against, for the very ability to possess the ultimate power of the cursed
thing alone.
*/
